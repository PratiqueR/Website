[
  {
    "objectID": "exercice.html",
    "href": "exercice.html",
    "title": "PratiqueR en action !",
    "section": "",
    "text": "La pratique constitue l‚Äô√©tape la plus importante dans l‚Äôapprentissage d‚Äôun langage de programmation. C‚Äôest en pratiquant que vous pourrez devenir habile et rus√© comme un renard.\nVous trouverez ci-dessous des exercices, aidez-vous des fonctions et ressources pr√©sente sur le site.\n\n\n\n\n\n\n    \n      \n      \n    \n\n\n\n\n\nAucun article correspondant"
  },
  {
    "objectID": "fonctions/agregation/somme.html",
    "href": "fonctions/agregation/somme.html",
    "title": "SUM()",
    "section": "",
    "text": "La fonction SUM(), permet de calculer la somme des √©l√©ments d‚Äôun objet num√©rique (vecteur, matrice, variable ‚Ä¶). Sum() n‚Äôadditionne que les valeurs num√©riques et ignore automatiquement les valeurs manquantes (NA).",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "SUM()"
    ]
  },
  {
    "objectID": "fonctions/agregation/somme.html#syntaxe",
    "href": "fonctions/agregation/somme.html#syntaxe",
    "title": "SUM()",
    "section": "Syntaxe",
    "text": "Syntaxe\nL‚Äôutilisation de cette fonction se fait de mani√®re simple en indiquant les valeurs ou la variable √† additionner. Voici la syntaxe de base pour additionner les √©l√©ments d‚Äôune variable dans un data frame, par exemple :\n---\nsum(data$ma_variable)\n---",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "SUM()"
    ]
  },
  {
    "objectID": "fonctions/agregation/somme.html#exemple",
    "href": "fonctions/agregation/somme.html#exemple",
    "title": "SUM()",
    "section": "Exemple",
    "text": "Exemple\n\nExemple 1\nDans ce premier exemple, nous allons utiliser la fonction sum() pour additionner plusieurs chiffres. Il suffit de passer les nombres dans la fonction, en les s√©parant par des virgules. La fonction calcule ensuite la somme de ces nombres.\n---\nsum(1,2,3)\n---\n\n\n[1] 6\n\n\n\n\nExemple 2",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "SUM()"
    ]
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contactez-nous ! üì©",
    "section": "",
    "text": "Si vous avez des questions, des suggestions ou si vous souhaitez collaborer, n‚Äôh√©sitez pas √† nous contacter via le formulaire ci-dessous ou sur nos r√©seaux sociaux.\n\n\n\n  Nom :\n  \n\n  Email :\n  \n\n  Message :\n  \n\n  Envoyer\n\n\nüîó Nos r√©seaux\nRetrouvez-nous sur nos r√©seaux et suivez nos derni√®res actualit√©s :\n\n\n\n  \n    üê¶ Twitter\n  \n  \n    üë®‚Äçüíª GitHub\n  \n  \n    üîó LinkedIn"
  },
  {
    "objectID": "contact.html#education",
    "href": "contact.html#education",
    "title": "Rachid Sahli",
    "section": "Education",
    "text": "Education\nUniversity of California, San Diego | San Diego, CA PhD in Mathematics | Sept 2011 - June 2015\nMacalester College | St.¬†Paul, MN B.A in Economics | Sept 2007 - June 2011"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bienvenue sur PratiqueR ! üöÄ",
    "section": "",
    "text": "PratiqueR est votre nouvel espace d‚Äôapprentissage interactif. Que vous soyez un d√©butant curieux ou un expert en qu√™te de perfectionnement, ce site est con√ßu pour vous !\nIci, vous trouverez des exercices pratiques, des tutoriels d√©taill√©s, des astuces et des bonnes pratiques pour devenir un ma√Ætre de R."
  },
  {
    "objectID": "index.html#pourquoi-pratiquer",
    "href": "index.html#pourquoi-pratiquer",
    "title": "Bienvenue sur PratiqueR ! üöÄ",
    "section": "",
    "text": "PratiqueR est votre nouvel espace d‚Äôapprentissage interactif d√©di√© au langage R. Que vous soyez d√©butant ou exp√©riment√©, ce site vous accompagne dans votre progression en mettant l‚Äôaccent sur la pratique et l‚Äôexp√©rimentation."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "contact.html#contactez-nous",
    "href": "contact.html#contactez-nous",
    "title": "Contact",
    "section": "",
    "text": "Si vous avez des questions, des suggestions ou si vous souhaitez collaborer, n‚Äôh√©sitez pas √† nous contacter via le formulaire ci-dessous ou sur nos r√©seaux sociaux."
  },
  {
    "objectID": "fonctions/agregation/maximum.html",
    "href": "fonctions/agregation/maximum.html",
    "title": "MAX()",
    "section": "",
    "text": "La fonction MAX() permet de calculer la valeur maximale d‚Äôun objet num√©rique (vecteur, matrice, variable ‚Ä¶). Max() renvoie la plus grande valeur parmi celles pr√©sentes dans l‚Äôobjet, en ignorant automatiquement les valeurs manquantes (NA) si sp√©cifi√©.\nVoici la page pour la fonction MAX() dans le m√™me format :\nmarkdown Copy Edit\nLa fonction MAX() permet de calculer la valeur maximale d‚Äôun objet num√©rique (vecteur, matrice, variable ‚Ä¶). Max() renvoie la plus grande valeur parmi celles pr√©sentes dans l‚Äôobjet, en ignorant automatiquement les valeurs manquantes (NA) si sp√©cifi√©.",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "MAX()"
    ]
  },
  {
    "objectID": "fonctions/agregation/maximum.html#exemple",
    "href": "fonctions/agregation/maximum.html#exemple",
    "title": "MAX()",
    "section": "Exemple",
    "text": "Exemple\n\nExemple 1\nDans ce premier exemple, nous allons utiliser la fonction max() pour obtenir la valeur maximale parmi plusieurs chiffres. Il suffit de passer les nombres dans la fonction, en les s√©parant par des virgules. La fonction calcule ensuite la plus grande valeur parmi ces nombres.\n---\nmax(1,2,3)\n---\n\n\n[1] 3\n\n\n\n\nExemple 2",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "MAX()"
    ]
  },
  {
    "objectID": "fonctions/agregation/maximum.html#exemple-1-1",
    "href": "fonctions/agregation/maximum.html#exemple-1-1",
    "title": "MAX()",
    "section": "Exemple 1",
    "text": "Exemple 1\nDans ce premier exemple, nous allons utiliser la fonction max() pour obtenir la valeur maximale parmi plusieurs chiffres. Il suffit de passer les nombres dans la fonction, en les s√©parant par des virgules. La fonction calcule ensuite la plus grande valeur parmi ces nombres.\n---\nmax(1,2,3)\n---\n\n\n[1] 3",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "MAX()"
    ]
  },
  {
    "objectID": "fonctions/agregation/maximum.html#example-2",
    "href": "fonctions/agregation/maximum.html#example-2",
    "title": "MAX()",
    "section": "Example 2",
    "text": "Example 2",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "MAX()"
    ]
  },
  {
    "objectID": "fonctions/agregation/maximum.html#exemple-1",
    "href": "fonctions/agregation/maximum.html#exemple-1",
    "title": "MAX()",
    "section": "Exemple 1",
    "text": "Exemple 1\nDans ce premier exemple, nous allons utiliser la fonction max() pour obtenir la valeur maximale parmi plusieurs chiffres. Il suffit de passer les nombres dans la fonction, en les s√©parant par des virgules. La fonction calcule ensuite la plus grande valeur parmi ces nombres.\n---\nmax(1,2,3)\n---\n\n\n[1] 3",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "MAX()"
    ]
  },
  {
    "objectID": "fonctions/agregation/somme.html#exemple-1",
    "href": "fonctions/agregation/somme.html#exemple-1",
    "title": "SUM()",
    "section": "Exemple 1",
    "text": "Exemple 1\nDans ce premier exemple, nous allons utiliser la fonction sum() pour additionner plusieurs chiffres. Il suffit de passer les nombres dans la fonction, en les s√©parant par des virgules. La fonction calcule ensuite la somme de ces nombres.\n---\nsum(1,2,3)\n---\n\n\n[1] 6",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "SUM()"
    ]
  },
  {
    "objectID": "fonctions/agregation/somme.html#exemple-2",
    "href": "fonctions/agregation/somme.html#exemple-2",
    "title": "SUM()",
    "section": "Exemple 2",
    "text": "Exemple 2",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "SUM()"
    ]
  },
  {
    "objectID": "fonctions/agregation/maximum.html#syntaxe",
    "href": "fonctions/agregation/maximum.html#syntaxe",
    "title": "MAX()",
    "section": "Syntaxe",
    "text": "Syntaxe\nL‚Äôutilisation de cette fonction est simple, il suffit d‚Äôindiquer les valeurs ou la variable pour laquelle vous souhaitez trouver la valeur maximale. Voici la syntaxe de base pour obtenir la valeur maximale d‚Äôune variable dans un data frame, par exemple :\n---\nmax(data$ma_variable)\n---",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "MAX()"
    ]
  },
  {
    "objectID": "fonctions/agregation/minimum.html",
    "href": "fonctions/agregation/minimum.html",
    "title": "MIN()",
    "section": "",
    "text": "La fonction MIN() permet de calculer la valeur minimale d‚Äôun objet num√©rique (vecteur, matrice, variable ‚Ä¶). Min() renvoie la plus petite valeur parmi celles pr√©sentes dans l‚Äôobjet, en ignorant automatiquement les valeurs manquantes (NA) si sp√©cifi√©.",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "MIN()"
    ]
  },
  {
    "objectID": "fonctions/agregation/minimum.html#syntaxe",
    "href": "fonctions/agregation/minimum.html#syntaxe",
    "title": "MIN()",
    "section": "Syntaxe",
    "text": "Syntaxe\nL‚Äôutilisation de cette fonction est simple, il suffit d‚Äôindiquer les valeurs ou la variable pour laquelle vous souhaitez trouver la valeur minimale. Voici la syntaxe de base pour obtenir la valeur minimale d‚Äôune variable dans un data frame, par exemple :\n---\nmin(data$ma_variable)\n---",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "MIN()"
    ]
  },
  {
    "objectID": "fonctions/agregation/minimum.html#exemple",
    "href": "fonctions/agregation/minimum.html#exemple",
    "title": "MIN()",
    "section": "Exemple",
    "text": "Exemple\n\nExemple 1\nDans ce premier exemple, nous allons utiliser la fonction min() pour obtenir la valeur minimale parmi plusieurs chiffres. Il suffit de passer les nombres dans la fonction, en les s√©parant par des virgules. La fonction calcule ensuite la plus petite valeur parmi ces nombres.\n---\nmin(1,2,3)\n---\n\n\n[1] 1\n\n\n\n\nExemple 2",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "MIN()"
    ]
  },
  {
    "objectID": "fonctions/agregation/length.html",
    "href": "fonctions/agregation/length.html",
    "title": "LENGTH()",
    "section": "",
    "text": "La fonction LENGTH() permet d‚Äôobtenir le nombre d‚Äô√©l√©ments contenus dans un objet (vecteur, liste, colonne d‚Äôun data frame, etc.). Elle est couramment utilis√©e pour conna√Ætre la taille d‚Äôun vecteur ou le nombre d‚Äôobservations d‚Äôune variable.",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "LENGTH()"
    ]
  },
  {
    "objectID": "fonctions/agregation/length.html#syntaxe",
    "href": "fonctions/agregation/length.html#syntaxe",
    "title": "LENGTH()",
    "section": "Syntaxe",
    "text": "Syntaxe\nL‚Äôutilisation de cette fonction est simple : il suffit d‚Äôindiquer l‚Äôobjet dont on souhaite conna√Ætre la taille. Voici la syntaxe de base pour obtenir la longueur d‚Äôun vecteur ou d‚Äôune variable d‚Äôun data frame :\n---\nlength(data$ma_variable)\n---",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "LENGTH()"
    ]
  },
  {
    "objectID": "fonctions/agregation/length.html#exemple",
    "href": "fonctions/agregation/length.html#exemple",
    "title": "LENGTH()",
    "section": "Exemple",
    "text": "Exemple\n\nExemple 1\nDans ce premier exemple, nous allons utiliser la fonction length() pour conna√Ætre le nombre d‚Äô√©l√©ments d‚Äôun vecteur num√©rique.\n---\nlength(c(1,2,3,4,5))\n---\n\n\n[1] 5\n\n\n\n\nExemple 2",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "LENGTH()"
    ]
  },
  {
    "objectID": "fonctions/agregation/moyenne.html",
    "href": "fonctions/agregation/moyenne.html",
    "title": "MEAN()",
    "section": "",
    "text": "La fonction MEAN() permet de calculer la moyenne arithm√©tique des √©l√©ments d‚Äôun objet num√©rique (vecteur, matrice, variable ‚Ä¶). Mean() additionne les valeurs num√©riques et les divise par leur nombre total. Par d√©faut, les valeurs manquantes (NA) ne sont pas ignor√©es et renvoient un r√©sultat NA.",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "MEAN()"
    ]
  },
  {
    "objectID": "fonctions/agregation/moyenne.html#syntaxe",
    "href": "fonctions/agregation/moyenne.html#syntaxe",
    "title": "MEAN()",
    "section": "Syntaxe",
    "text": "Syntaxe\nL‚Äôutilisation de cette fonction est simple : il suffit d‚Äôindiquer les valeurs ou la variable dont on souhaite calculer la moyenne. Voici la syntaxe de base pour obtenir la moyenne d‚Äôune variable dans un data frame :\n---\nmean(data$ma_variable)\n---",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "MEAN()"
    ]
  },
  {
    "objectID": "fonctions/agregation/moyenne.html#exemple",
    "href": "fonctions/agregation/moyenne.html#exemple",
    "title": "MEAN()",
    "section": "Exemple",
    "text": "Exemple\n\nExemple 1\nDans ce premier exemple, nous allons utiliser la fonction mean() pour calculer la moyenne de plusieurs chiffres. Il suffit de passer les nombres dans la fonction, en les s√©parant par des virgules. La fonction calcule ensuite la moyenne de ces nombres.\n---\nmean(1,2,3,4,5)\n---\n\n\n[1] 1\n\n\n\n\nExemple 2",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "MEAN()"
    ]
  },
  {
    "objectID": "fonctions/agregation/mediane.html",
    "href": "fonctions/agregation/mediane.html",
    "title": "MEDIAN()",
    "section": "",
    "text": "La fonction MEDIAN() permet de calculer la m√©diane d‚Äôun ensemble de valeurs num√©riques. La m√©diane est la valeur centrale d‚Äôun ensemble de nombres tri√©s dans l‚Äôordre croissant. Si le nombre d‚Äô√©l√©ments est impair, la m√©diane est le nombre du milieu. Si le nombre d‚Äô√©l√©ments est pair, la m√©diane est la moyenne des deux valeurs centrales.",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "MEDIAN()"
    ]
  },
  {
    "objectID": "fonctions/agregation/mediane.html#syntaxe",
    "href": "fonctions/agregation/mediane.html#syntaxe",
    "title": "MEDIAN()",
    "section": "Syntaxe",
    "text": "Syntaxe\nL‚Äôutilisation de cette fonction est simple : il suffit d‚Äôindiquer les valeurs ou la variable dont on souhaite obtenir la m√©diane. Voici la syntaxe de base pour calculer la m√©diane d‚Äôune variable dans un data frame :\n---\nmedian(data$ma_variable)\n---",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "MEDIAN()"
    ]
  },
  {
    "objectID": "fonctions/agregation/mediane.html#exemple",
    "href": "fonctions/agregation/mediane.html#exemple",
    "title": "MEDIAN()",
    "section": "Exemple",
    "text": "Exemple\n\nExemple 1\nDans ce premier exemple, nous allons utiliser la fonction median() pour obtenir la valeur centrale d‚Äôun ensemble de chiffres. Il suffit de passer les nombres dans la fonction, en les s√©parant par des virgules. La fonction trie les valeurs et retourne la m√©diane.\n---\nmedian(c(1,3,5,7,9))\n---\n\n\n[1] 5\n\n\n\n\nExemple 2",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "MEDIAN()"
    ]
  },
  {
    "objectID": "fonctions/agregation/sd.html",
    "href": "fonctions/agregation/sd.html",
    "title": "SD()",
    "section": "",
    "text": "La fonction SD() permet de calculer l‚Äô√©cart-type d‚Äôun ensemble de valeurs num√©riques. L‚Äô√©cart-type mesure la dispersion des donn√©es autour de leur moyenne. Plus l‚Äô√©cart-type est √©lev√©, plus les valeurs sont dispers√©es.\nL‚Äô√©cart-type (\\(\\sigma\\) pour une population, \\(s\\) pour un √©chantillon) est d√©fini par la formule suivante :\n\\[\ns = \\sqrt{\\frac{1}{n-1} \\sum_{i=1}^{n} (x_i - \\bar{x})^2}\n\\]\no√π :",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "SD()"
    ]
  },
  {
    "objectID": "fonctions/agregation/sd.html#syntaxe",
    "href": "fonctions/agregation/sd.html#syntaxe",
    "title": "SD()",
    "section": "Syntaxe",
    "text": "Syntaxe\nL‚Äôutilisation de cette fonction est simple : il suffit d‚Äôindiquer les valeurs ou la variable dont on souhaite obtenir l‚Äô√©cart-type. Voici la syntaxe de base pour calculer l‚Äô√©cart-type d‚Äôune variable dans un data frame :\nsd(data$ma_variable)",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "SD()"
    ]
  },
  {
    "objectID": "fonctions/agregation/sd.html#exemple",
    "href": "fonctions/agregation/sd.html#exemple",
    "title": "SD()",
    "section": "Exemple",
    "text": "Exemple\n\nExemple 1\nDans ce premier exemple, nous allons utiliser la fonction sd() pour calculer l‚Äô√©cart-type d‚Äôun ensemble de chiffres. Il suffit de passer les nombres sous forme d‚Äôun vecteur dans la fonction.\n---\nsd(c(1,2,3,4,5))\n---\n\n\n[1] 1.581139\n\n\nIci, l‚Äô√©cart-type est 1.58, ce qui indique la dispersion des valeurs autour de leur moyenne.\n\n\nExemple 2",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "SD()"
    ]
  },
  {
    "objectID": "fonctions/agregation/variance.html",
    "href": "fonctions/agregation/variance.html",
    "title": "VAR()",
    "section": "",
    "text": "La fonction VAR() permet de calculer la variance d‚Äôun ensemble de valeurs num√©riques. La variance mesure la dispersion des donn√©es autour de leur moyenne. Plus la variance est √©lev√©e, plus les valeurs sont dispers√©es.\nLa variance (\\(sigma^2\\) pour une population, \\(s^2\\) pour un √©chantillon) est d√©finie par la formule suivante :\n\\[\ns^2 = \\frac{1}{n-1} \\sum_{i=1}^{n} (x_i - \\bar{x})^2\n\\]\no√π :",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "VAR()"
    ]
  },
  {
    "objectID": "fonctions/agregation/variance.html#syntaxe",
    "href": "fonctions/agregation/variance.html#syntaxe",
    "title": "VAR()",
    "section": "Syntaxe",
    "text": "Syntaxe\nL‚Äôutilisation de cette fonction est simple : il suffit d‚Äôindiquer les valeurs ou la variable dont on souhaite obtenir la variance. Voici la syntaxe de base pour calculer la variance d‚Äôune variable dans un data frame :\nvar(data$ma_variable)",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "VAR()"
    ]
  },
  {
    "objectID": "fonctions/agregation/variance.html#exemple",
    "href": "fonctions/agregation/variance.html#exemple",
    "title": "VAR()",
    "section": "Exemple",
    "text": "Exemple\n\nExemple 1\nDans ce premier exemple, nous allons utiliser la fonction var() pour calculer la variance d‚Äôun ensemble de chiffres. Il suffit de passer les nombres sous forme d‚Äôun vecteur dans la fonction.\n---\nvar(c(1,2,3,4,5))\n---\n\n\n[1] 2.5\n\n\nIci, la variance est 2.5, ce qui repr√©sente la dispersion des valeurs autour de leur moyenne.\n\n\nExemple 2",
    "crumbs": [
      "Accueil",
      "Fonctions R",
      "Aggr√©gation",
      "VAR()"
    ]
  },
  {
    "objectID": "index.html#ce-que-vous-allez-trouver-ici",
    "href": "index.html#ce-que-vous-allez-trouver-ici",
    "title": "Bienvenue sur PratiqueR ! üöÄ",
    "section": "Ce que vous allez trouver ici",
    "text": "Ce que vous allez trouver ici\n‚ú® Des tutoriels progressifs : Des bases aux concepts avanc√©s, explorez les fondamentaux de R en toute simplicit√©.\nüìä Des cas pratiques : Appliquez vos connaissances √† travers des exemples concrets et des probl√®mes r√©els.\nüí° Des fiches fonction & package : Comprenez et ma√Ætrisez les outils essentiels du langage R.\nüéØ Des d√©fis et quiz interactifs : Testez vos comp√©tences et mettez-vous √† l‚Äô√©preuve !"
  },
  {
    "objectID": "index.html#commencez-d√®s-maintenant",
    "href": "index.html#commencez-d√®s-maintenant",
    "title": "Bienvenue sur PratiqueR ! üöÄ",
    "section": "Commencez d√®s maintenant !",
    "text": "Commencez d√®s maintenant !\nüöÄ Naviguez dans les sections et choisissez votre premier exercice !\nüìö Vous cherchez une fonction sp√©cifique ? Consultez notre r√©pertoire des fonctions.\nüìù Besoin d‚Äôun guide pas √† pas ? Explorez nos tutoriels d√©taill√©s.\nüî• Pr√™t √† relever un d√©fi ? Lancez-vous dans nos exercices pratiques !\nR est un outil puissant ‚Äì ma√Ætrisez-le avec PratiqueR !"
  }
]